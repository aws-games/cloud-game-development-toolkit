---
# This playbook installs the Unreal Engine Horde Agent
- name: Linux Horde Agent
  hosts: all
  vars:
    horde_user_name: Horde
    horde_agent_dir: /home/Horde
  tasks:
    - name: Create Horde user
      ansible.builtin.user:
        name: "{{ horde_user_name }}"
        create_home: true
    - name: Add DotNet Backport package repository on Ubuntu
      ansible.builtin.apt_repository:
        repo: ppa:dotnet/backports
        state: present
      when: ansible_distribution == "Ubuntu"
    - name: Install DotNet
      ansible.builtin.package:
        name: dotnet-runtime-8.0 # Unreal Engine 5.6 needs DotNet runtime version 8; previous versions require version 6 instead
        state: present
    - name: Check if i386 enabled
      ansible.builtin.shell:
        cmd: set -o pipefail && dpkg --print-foreign-architectures | grep i386
        executable: /bin/bash
      register: result_i386_check
      changed_when: result_i386_check.rc == 1
      failed_when: result_i386_check.rc > 1
    - name: Enable Multiarch
      ansible.builtin.command:
        cmd: dpkg --add-architecture i386
      when: result_i386_check.rc == 1
      changed_when: result_i386_check.rc == 1
    - name: Update Cache
      ansible.builtin.apt:
        update_cache: true
      when: result_i386_check.rc == 1
    - name: Install Wine on Ubuntu machines
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      with_items: [wine, wine32:i386]
      when: ansible_distribution == "Ubuntu"
    - name: Download the Horde Agent
      ansible.builtin.uri:
        url: https://{{ horde_server_url }}/api/v1/tools/horde-agent?action=Zip
        dest: "{{ horde_agent_dir }}/agent.zip"
    - name: Unarchive The Horde Agent
      ansible.builtin.unarchive:
        src: "{{ horde_agent_dir }}/agent.zip"
        dest: "{{ horde_agent_dir }}"
        owner: "{{ horde_user_name }}"
      become: true
      become_user: "{{ horde_user_name }}"
    - name: Load appsettings.json
      ansible.builtin.slurp:
        src: "{{ horde_agent_dir }}/appsettings.json"
      register: appsettings
      become: true
      become_user: "{{ horde_user_name }}"
    - name: Debug imported appsettings.json
      ansible.builtin.debug:
        msg: "{{ appsettings.content | b64decode | from_json }}"
    - name: Modify appsettings.json to include Wine executable
      ansible.builtin.set_fact:
        appsettings: "{{ appsettings.content | b64decode | from_json | combine(item, recursive=True) }}"
      loop:
        - { Horde: { wineExecutablePath: /usr/bin/wine } }
    - name: Debug updated appsettings.json
      ansible.builtin.debug:
        var: appsettings
    - name: Write updated appsettings.json to file
      ansible.builtin.copy:
        content: "{{ appsettings | to_nice_json }}"
        dest: /home/Horde/appsettings.json
        mode: "0644"
      become: true
      become_user: "{{ horde_user_name }}"
    - name: Configure the Horde Agent
      ansible.builtin.shell:
        chdir: $HORDE_AGENT_DIR
        cmd: dotnet HordeAgent.dll SetServer -Name="Default" -Url="$HORDE_SERVER_URL" -Default
      become: true
      become_user: "{{ horde_user_name }}"
      environment:
        HORDE_AGENT_DIR: "{{ horde_agent_dir }}"
        HORDE_SERVER_URL: https://{{ horde_server_url }}
      changed_when: true
    - name: Create Horde Agent Service
      ansible.builtin.copy:
        src: horde-agent.service
        dest: /etc/systemd/system/horde-agent.service
        mode: "0644"
    - name: Enable Horde Agent Service
      ansible.builtin.service:
        service: horde-agent
        enabled: true
        state: started
