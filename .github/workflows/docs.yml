#====================================================================================================
## Process
# 1. When changes are made to documentation files and pushed to the main branch, the workflow in this file is triggered.
# 2. Copy the repository's contents to the runner, so the workflow can access them.
# 3. Build and deploy the documentation
#====================================================================================================
name: Build Docs and Publish to gh-pages
#checkov:skip=CKV_GHA_7:workflow_dispatch inputs required for documentation versioning - controlled environment
on:
  #push:
  #  branches:
  #    - main
  #  paths:
  #    - "docs/**"
  #    - "mkdocs.yml"
  #    - "CHANGELOG.md"
  #    - "**/README.md"
  #    - ".github/workflows/docs.yml"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to build and publish docs (i.e. v0.1.0-alpha.1, v1.0.0)"
        required: true
        type: string
      alias:
        description: "Alias to associate version (latest, stage)"
        required: true
        type: string
      git_ref:
        description: "Branch or commit ID to checkout from"
        required: false
        type: string
        default: main
permissions:
  contents: read
jobs:
  publish_docs:
    if: github.repository == 'aws-games/cloud-game-development-toolkit'
    permissions:
      contents: write
      pages: write
    concurrency:
      group: docs
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ inputs.git_ref }}
      - name: Git client setup
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
      - name: Deploy Docs
        run: make docs-deploy-github VERSION=${{ inputs.VERSION }} ALIAS=${{ inputs.ALIAS }}
